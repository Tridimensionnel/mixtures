# Generated by Django 3.0.6 on 2020-05-11 13:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('drugcombinator', '0029_auto_20200511_1521'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalInteraction',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('last_modified', models.DateTimeField(blank=True, editable=False, verbose_name='dernière modification')),
                ('risk', models.IntegerField(choices=[(0, 'Inconnu'), (1, 'Neutre'), (2, 'Vigilance'), (3, 'Risqué'), (4, 'Dangereux')], default=0, verbose_name='risques')),
                ('synergy', models.IntegerField(choices=[(0, 'Inconnue'), (1, 'Neutre'), (5, 'Addition'), (2, 'Atténuation'), (3, 'Potentialisation'), (4, 'Mixte')], default=0, verbose_name='synergie')),
                ('risk_reliability', models.IntegerField(choices=[(0, 'Non évaluée'), (1, 'Théorique'), (2, 'Supposée'), (3, 'Avérée')], default=0, verbose_name='fiabilité des risques')),
                ('effects_reliability', models.IntegerField(choices=[(0, 'Non évaluée'), (1, 'Théorique'), (2, 'Supposée'), (3, 'Avérée')], default=0, verbose_name='fiabilité de la synergie et des effets')),
                ('risk_description', models.TextField(blank=True, default='', help_text='La syntaxe <a href="https://commonmark.org/help/">markdown</a> est autorisée. Les paragraphes sont séparés par deux retours à la ligne.', verbose_name='description des risques')),
                ('effect_description', models.TextField(blank=True, default='', help_text='La syntaxe <a href="https://commonmark.org/help/">markdown</a> est autorisée. Les paragraphes sont séparés par deux retours à la ligne.', verbose_name='description des effets')),
                ('notes', models.TextField(blank=True, default='', help_text="Ce champ n'est visible que sur ce site d'administration et est partagé entre tous les utilisateurs.", verbose_name='notes')),
                ('is_draft', models.BooleanField(default=True, help_text='En cas de travail en cours, de données incertaines ou incomplètes.', verbose_name='brouillon')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('from_drug', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='drugcombinator.Drug', verbose_name='première substance')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('to_drug', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='drugcombinator.Drug', verbose_name='seconde substance')),
            ],
            options={
                'verbose_name': 'historical interaction',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDrug',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('last_modified', models.DateTimeField(blank=True, editable=False, verbose_name='dernière modification')),
                ('name', models.CharField(max_length=128, verbose_name='nom')),
                ('slug', models.SlugField(verbose_name='identifiant')),
                ('description', models.TextField(blank=True, default='', help_text='La syntaxe <a href="https://commonmark.org/help/">markdown</a> est autorisée. Les paragraphes sont séparés par deux retours à la ligne.', verbose_name='description')),
                ('risks', models.TextField(blank=True, default='', help_text='Risques spécifiques à la combinaison de cette substance qui ne dépendent pas d\'une interaction particulière.<br/>La syntaxe <a href="https://commonmark.org/help/">markdown</a> est autorisée. Les paragraphes sont séparés par deux retours à la ligne.', verbose_name='risques généraux')),
                ('effects', models.TextField(blank=True, default='', help_text='Effets spécifiques à la combinaison de cette substance qui ne dépendent pas d\'une interaction particulière.<br/>La syntaxe <a href="https://commonmark.org/help/">markdown</a> est autorisée. Les paragraphes sont séparés par deux retours à la ligne.', verbose_name='effets généraux')),
                ('_aliases', models.TextField(blank=True, default='', help_text='Un alias par ligne. Insensible à la casse.', verbose_name='dénominations')),
                ('common', models.BooleanField(default=True, help_text="Les substances communes sont affichées sous forme de boutons dans l'app.", verbose_name='commune')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='drugcombinator.Category', verbose_name='catégorie')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical substance',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
